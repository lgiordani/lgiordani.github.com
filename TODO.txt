TODO

## Slots

## classattribute

## method-wrapper vs method, slot wrapper vs slot, dict_proxy

## function 

>>> type(prova)
<type 'function'>
>>> dir(function)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'function' is not defined
>>> dir(prova)   
['__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__doc__', '__format__', '__get__', '__getattribute__', '__globals__', '__hash__', '__init__', '__module__', '__name__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'func_closure', 'func_code', 'func_defaults', 'func_dict', 'func_doc', 'func_globals', 'func_name']
>>> prova.__dict__
{}
>>> function
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'function' is not defined
>>> prova.__class__
<type 'function'>
>>> prova.__class__.__dict__
dict_proxy({'func_closure': <member 'func_closure' of 'function' objects>, '__module__': <member '__module__' of 'function' objects>, '__getattribute__': <slot wrapper '__getattribute__' of 'function' objects>, '__dict__': <attribute '__dict__' of 'function' objects>, '__code__': <attribute '__code__' of 'function' objects>, 'func_code': <attribute 'func_code' of 'function' objects>, '__setattr__': <slot wrapper '__setattr__' of 'function' objects>, '__new__': <built-in method __new__ of type object at 0x83362c0>, '__closure__': <member '__closure__' of 'function' objects>, '__call__': <slot wrapper '__call__' of 'function' objects>, '__get__': <slot wrapper '__get__' of 'function' objects>, '__doc__': <member '__doc__' of 'function' objects>, 'func_dict': <attribute 'func_dict' of 'function' objects>, 'func_name': <attribute 'func_name' of 'function' objects>, '__name__': <attribute '__name__' of 'function' objects>, 'func_globals': <member 'func_globals' of 'function' objects>, '__defaults__': <attribute '__defaults__' of 'function' objects>, '__globals__': <member '__globals__' of 'function' objects>, '__delattr__': <slot wrapper '__delattr__' of 'function' objects>, 'func_defaults': <attribute 'func_defaults' of 'function' objects>, '__repr__': <slot wrapper '__repr__' of 'function' objects>, 'func_doc': <member 'func_doc' of 'function' objects>})

## dir(afunction) __closure__

## Method and slot wrapper
Door.__call__
type.__call___

## first class objects


## Functions: a first approach

I stated that calling an object is the same as calling its `__call__` method, which is somehow a circular definition. Indeed, what happens when we call `__call__()`?





There shall be some sort of ???

>>> def pippo():
...  print "AA"
... 
>>> 
>>> 
>>> pippo.__call__
<method-wrapper '__call__' of function object at 0x7f9c6e1dc848>
>>> dir(pippo.__call__)
['__call__', '__class__', '__cmp__', '__delattr__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__name__', '__new__', '__objclass__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']                                                                                                                                                                            
>>> pippo.__call__.__call__
<method-wrapper '__call__' of method-wrapper object at 0x7f9c6e1e26d0>                                                                                                                                                         
>>> pippo.__call__.__call__.__call__                                                                                                                                                                                           
<method-wrapper '__call__' of method-wrapper object at 0x7f9c6e1e2790>                                                                                                                                                         
>>> pippo.__call__.__call__.__call__.__call__                                                                                                                                                                                  
<method-wrapper '__call__' of method-wrapper object at 0x7f9c6e1e2810>                                                                                                                                                         
>>>                                                                                                                                                                                                                          